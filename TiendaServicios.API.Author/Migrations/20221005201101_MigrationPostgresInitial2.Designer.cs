// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiendaServicios.API.Author.Aplication.Persistence;

#nullable disable

namespace TiendaServicios.API.Author.Migrations
{
    [DbContext(typeof(ContextAuthor))]
    [Migration("20221005201101_MigrationPostgresInitial2")]
    partial class MigrationPostgresInitial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TiendaServicios.API.Author.Aplication.Model.AcademicDegree", b =>
                {
                    b.Property<int>("IdAcademicDegree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAcademicDegree"));

                    b.Property<string>("AcademicCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AcademicDegreeGuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AuthorIdBookAuthot")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorLibroId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DegreeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdAcademicDegree");

                    b.HasIndex("AuthorIdBookAuthot");

                    b.ToTable("AcademicDegree");
                });

            modelBuilder.Entity("TiendaServicios.API.Author.Aplication.Model.BookAuthor", b =>
                {
                    b.Property<int>("IdBookAuthot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBookAuthot"));

                    b.Property<DateTime?>("Bithdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BookAuthorGuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdBookAuthot");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("TiendaServicios.API.Author.Aplication.Model.AcademicDegree", b =>
                {
                    b.HasOne("TiendaServicios.API.Author.Aplication.Model.BookAuthor", "Author")
                        .WithMany("ListAcademicDegree")
                        .HasForeignKey("AuthorIdBookAuthot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("TiendaServicios.API.Author.Aplication.Model.BookAuthor", b =>
                {
                    b.Navigation("ListAcademicDegree");
                });
#pragma warning restore 612, 618
        }
    }
}
